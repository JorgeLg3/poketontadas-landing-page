---
import { getCollection, render } from "astro:content";
import { Image, Picture } from "astro:assets";
import Layout from '../../layouts/Layout.astro';

const pokemonList = await getCollection('pokemon');

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const pokemons = await getCollection('pokemon');
  return pokemons.map(pokemon => ({
    params: { id: pokemon.id },
    props: { pokemon },
  }));
}
// 2. For your template, you can get the entry directly from the prop
const { pokemon } = Astro.props;
const { data, id } = pokemon;
const { name, description, img, category, abilities, types, weight, height } = data;

const { Content } = await render(pokemon);
---
<Layout>
  <div class="pokemon-page">
    <div class="content">
      <div class="main-info">
        <div class="img-row">
          <img 
            class:list={"image"}
            transition:name={`img-${id}`}
            src={`/img/${img}`} 
            alt="vernileaf" 
          />
        </div>
        <div class="text-row">
          <div class="text-container">
            <h1>{name}</h1>
            <p class="description">{description}</p>
          </div>
        </div>
      </div>
      <div class="tags-container">
        <div class="tag">
          <div class="label">Categoría</div>
          <div class="values">{category}</div>
        </div>
        <div class="tag">
          <div class="label">Tipo</div>
          <div class="values">
            {types}
            <!-- {types.map((type) => {
              <div>{type}</div>
            })} -->
          </div>
        </div>
        <div class="tag">
          <div class="label">Altura</div>
          <div class="values">{height} m</div>
        </div>
        <div class="tag">
          <div class="label">Peso</div>
          <div class="values">{weight} kg</div>
        </div>
        <div class="tag">
          <div class="label">Habilidad</div>
          <div class="values">
            {abilities}
            <!-- {abilities.map((ability) => {
              <div>{ability}</div>
            })} -->
          </div>
        </div>
      </div>
      <a href='/#pokemon' class="return-button">← Volver atrás</a>
    </div>
  </div>
  <div class="pokemon-list-container">
    <div class="pokemon-list-content">
      <ul>
        {pokemonList.map(pokemon => (
          <li>
            <div class="pokemon-card">
              <a href={`/pokemon/${pokemon.id}`}>
                <img 
                  class:list={"image"}
                  src={`/img/${pokemon.data.img}`} 
                  alt={pokemon.data.name}
                />
              </a>
            </div>
          </li>
        ))}
      </ul>
    </div>
  </div>
</Layout>
<style>
  .pokemon-page{
    display: flex;
    flex-direction: column;
    align-items: center;
    color: var(--darkblue);
    padding: 1rem 1.5rem;
  }
  .content{
    max-width: 960px;
  }
  .main-info{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    column-gap: 2rem;
    max-width: 720px;
  }
  .image-row{

  }
  .image-container{

  }
  .image{
    scroll-behavior: auto;
  }
  .text-row{
    display: flex;
  }
  .text-container{
  }
  .tags-container{
    margin-top: 2rem;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 2rem;
    align-items: flex-start;
    margin-bottom: 2rem;
  }
  .tag{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }
  .label{
    color: var(--white);
    background-color: var(--lightblue);
    padding: 0.3rem 1rem;
    min-width: 100px;
    text-align: center;
    font-weight: 500;
  }
  .return-button{
    color: var(--accent);
    align-self: flex-start;
    transition: 0.3s;
  }
  .return-button:hover{
    text-decoration: underline;
  }
  .pokemon-list-container{
    background-color: var(--lightblue);
    display: flex;
    flex-direction: column;
    align-items: center;
  }
  .pokemon-list-content{
    max-width: 960px;
    padding: 2rem;
  }
  .pokemon-list-content ul{
    display: flex;
    gap: 2rem;
    flex-wrap: wrap;
    justify-content: center;
  }
  .pokemon-card{
    background-color: var(--white);
    border-radius: 8px;
    max-width: 150px;
    max-height: 150px;
    box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.2);
  }
  .pokemon-card:hover {
    transform: scale(1.1);
    transition: 0.2s;
  }
  .pokemon-card img{
    height: 100%;
    width: 100%;
  }
  @media (min-width: 768px) {
    .main-info{
      flex-direction: row;
    }
    .pokemon-page{
      min-height: 490px;
      justify-content: center;
    }
    .image-row{
      flex-basis: 40%;
    }
    .text-row{
      flex-basis: 60%;
    }
  }
</style>